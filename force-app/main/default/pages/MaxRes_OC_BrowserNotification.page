<apex:page >
    <apex:includeScript value="/support/console/41.0/integration.js"/>
    <apex:remoteObjects jsNamespace="RemoteObjectModel">
        <apex:remoteObjectModel name="LiveChatTranscript" fields="ChatKey,id"/>
    </apex:remoteObjects>
    
    <script>
    var hasFocus=true;
    
    var ct = new RemoteObjectModel.LiveChatTranscript();
    sforce.console.addEventListener("SFORCE_PRESENCE:WORK_ACCEPTED",function(result){
        console.log("work accepted",result);
        var transcriptid =result.workItemId;
        if(transcriptid.substring(0,3)=='570'){
            ct.retrieve({where: {id: {eq: transcriptid }}}, function(error,results) {
                console.log("Res", results[0].get('ChatKey'));
                sforce.console.chat.onNewMessage(results[0].get('ChatKey'), function(res){
                    console.log("message",res);
                    console.log("has focus",document.hasFocus());
                    if(res.type=="Chasitor" && !hasFocus)notify("Message from "+res.name,res.content);
                });
            });
        }
        
    });
    
    sforce.console.addEventListener("SFORCE_PRESENCE:WORK_ASSIGNED",function(result){
        console.log("work assigned",result);
        if(!hasFocus)notify("New Work Assigned","A new work item has been assigned to you");
    });
    
    
    
    function notify(title,text) {
        if (!("Notification" in window)) {
            alert("This browser does not support desktop notification");
        }
        
        // Let's check whether notification permissions have already been granted
        else if (Notification.permission === "granted") {
            // If it's okay let's create a notification
            
            
            var notification = new Notification(title, {
                icon: 'https://cdn.zapier.com/storage/services/e18d02bc3d9fdcf0d4bf9ad43d8a8e6d.128x128.png',
                body: text
            });
            
            notification.onclick = function () {
                console.log("clicked");
                parent.focus();
                window.focus();
            };
            
            
        }
        
        // Otherwise, we need to ask the user for permission
            else if (Notification.permission !== "denied") {
                Notification.requestPermission(function (permission) {
                    // If the user accepts, let's create a notification
                    if (permission === "granted" ) {
                        var notification = new Notification(title, {
                            icon: 'https://cdn.zapier.com/storage/services/e18d02bc3d9fdcf0d4bf9ad43d8a8e6d.128x128.png',
                            body: text
                        });
                    }
                });
            }
    }
    
    
    // Set the name of the hidden property and the change event for visibility
    var hidden, visibilityChange; 
    if (typeof document.hidden !== "undefined") { // Opera 12.10 and Firefox 18 and later support 
        hidden = "hidden";
        visibilityChange = "visibilitychange";
    } else if (typeof document.msHidden !== "undefined") {
        hidden = "msHidden";
        visibilityChange = "msvisibilitychange";
    } else if (typeof document.webkitHidden !== "undefined") {
        hidden = "webkitHidden";
        visibilityChange = "webkitvisibilitychange";
    }
    
    function handleVisibilityChange() {
        if (document[hidden]) {
            hasFocus=false;
            console.log("focus change",hasFocus);
        } else {
            hasFocus=true;
            console.log("focus change",hasFocus);
        }
    }
    document.addEventListener(visibilityChange, handleVisibilityChange, false);
    </script>
</apex:page>